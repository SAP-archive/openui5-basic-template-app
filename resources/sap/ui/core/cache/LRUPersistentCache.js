/*!
 * OpenUI5
 * (c) Copyright 2009-2021 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["sap/base/Log","sap/ui/performance/Measurement"],function(e,t){"use strict";var a={name:"LRUPersistentCache",defaultOptions:{databaseName:"ui5-cachemanager-db",_contentStoreName:"content-store",_metadataStoreName:"metadata-store",_metadataKey:"metadataKey"},_db:{},init:function(){this._metadata={};this._mru=-1;this._lru=-1;return _(this)},_destroy:function(){if(this._db.close){this._db.close()}this._metadata=null;this._ui5version=null},set:function(a,n){if(U(a)){e.warning("Cache Manager ignored 'set' for key ["+a+"]");return Promise.resolve()}if(a==null){return Promise.reject("Cache Manager does not accept undefined or null as key")}if(typeof n==="undefined"){return Promise.reject("Cache Manager does not accept undefined as value")}e.debug("Cache Manager LRUPersistentCache: adding item with key ["+a+"]...");var o=this,s="[sync ] fnSet: total[sync]  key ["+a+"]",i="[sync ] fnSet: txStart[sync]  key ["+a+"]",c="[sync ] fnSet: storeOpen[sync]  key ["+a+"]",u="[sync ] fnSet: putContent[sync]  key ["+a+"]",d="[sync ] fnSet: putMetadata[sync]  key ["+a+"]",f="[sync ] fnSet: serialize[sync]  key ["+a+"]";return new Promise(function l(_,h){t.start(s,"CM",r);var y,M,v,P,D;D=C(o._metadata);P=new g(a,n,typeof n,++o._mru,f,r).serialize();t.start(i,"CM",r);var k=o._db.transaction([o.defaultOptions._contentStoreName,o.defaultOptions._metadataStoreName],"readwrite");t.end(i);k.onerror=function(t){var a="Cache Manager cannot complete add/put transaction for entry with key: "+P.oData.key+". Details: "+O(t);e.error(a);o._metadata=D;p(o);h(a)};k.onabort=function(t){o._metadata=D;p(o);var r=b(o);if(w(t)&&r>0){e.warning("Cache Manager is trying to free some space to add/put new item");S(o,a,n).then(function(){e.debug("Cache Manager LRUPersistentCache: set completed after freeing space. ItemCount changed from "+r+" to "+b(o));_()},function(t){var a="Cache Manager LRUPersistentCache: set unsuccessful. Cannot free space to add/put entry. Details: "+t;e.error(a);h(a)})}else{var s="Cache Manager LRUPersistentCache: set failed: "+O(t);e.error(s);h(s)}};k.oncomplete=function(){e.debug("Cache Manager LRUPersistentCache: adding item with key ["+a+"]... done");_()};t.start(c,"CM",r);y=k.objectStore(o.defaultOptions._contentStoreName);v=k.objectStore(o.defaultOptions._metadataStoreName);t.end(c);t.start(u,"CM",r);M=y.put(P.oData,P.oData.key);t.end(u);t.end(s);M.onsuccess=function(){m(o,P);t.start(d,"CM",r);v.put(o._metadata,o.defaultOptions._metadataKey);t.end(d)};if(e.getLevel()>=e.Level.DEBUG){e.debug("Cache Manager LRUPersistentCache: measurements: "+s+": "+t.getMeasurement(s).duration+"; "+f+": "+t.getMeasurement(f).duration+"; "+i+": "+t.getMeasurement(i).duration+"; "+c+": "+t.getMeasurement(c).duration+"; "+u+": "+t.getMeasurement(u).duration+"; "+d+": "+t.getMeasurement(d).duration)}})},has:function(t){if(U(t)){e.warning("Cache Manager ignored 'has' for key ["+t+"]");return Promise.resolve(false)}return this.get(t).then(function(e){return typeof e!=="undefined"})},_getCount:function(){return Promise.resolve(b(this))},_getAll:function(e){var t=this,a,r="[sync ] _getAll: deserialize";return new Promise(function(e,o){var s=[],i=t._db.transaction([t.defaultOptions._contentStoreName],"readonly"),c=i.objectStore(t.defaultOptions._contentStoreName);i.onerror=function(e){o(O(e))};i.oncomplete=function(t){e(s)};c.openCursor().onsuccess=function(e){var t=e.target.result;if(t&&t.value){a=new g(t.value,r,n).deserialize();s.push({key:a.oData.key,value:a.oData.value});t.continue()}}})},_loadMetaStructure:function(){var t=this;return new Promise(function(a,n){var r=t._db.transaction([t.defaultOptions._metadataStoreName],"readonly");r.onerror=function(t){if(!r.errorHandled){r.errorHandled=true;var a="Cache Manager cannot complete transaction for read metadata. Details: "+r.error;e.error(a);n(a)}};var o=r.objectStore(t.defaultOptions._metadataStoreName);try{var s=o.get(t.defaultOptions._metadataKey);s.onsuccess=function(n){t._metadata=s.result?s.result:y(t._ui5version);if(t._metadata.__ui5version!==t._ui5version){t.reset().then(a,function(t){e.error("Cannot reset the cache. Details:"+t);r.abort()})}else{a()}};s.onerror=function(t){e.error("Cache Manager cannot complete transaction for read metadata items. Details: "+t.message);n(t.message)}}catch(a){e.error("Cache Manager cannot read metadata entries behind key: "+t.defaultOptions._metadataKey+". Details: "+a.message);n(a.message)}})},get:function(t){if(U(t)){e.warning("Cache Manager ignored 'get' for key ["+t+"]");return Promise.resolve()}return c(this,t)},del:function(t){if(U(t)){e.warning("Cache Manager ignored 'del' for key ["+t+"]");return Promise.resolve()}return i(this,t)},reset:function(){var t=this;return new Promise(function(a,n){var r,o,s,i,c;c=t._db.transaction([t.defaultOptions._contentStoreName,t.defaultOptions._metadataStoreName],"readwrite");c.onerror=c.onabort=function(t){if(!c.errorHandled){c.errorHandled=true;var a="Cache Manager LRUPersistentCache: transaction for reset() failed. Details: "+c.error;e.error(a);n(a)}};c.oncomplete=function(e){a()};r=c.objectStore(t.defaultOptions._contentStoreName);o=c.objectStore(t.defaultOptions._metadataStoreName);try{s=r.clear();s.onerror=function(){c.abort()};s.onsuccess=function(){i=o.clear();i.onerror=function(){c.abort()};i.onsuccess=function(){t._metadata=y(sap.ui.version);p(t)}}}catch(e){c.abort()}})}};var n="LRUPersistentCache,get",r="LRUPersistentCache,set",o=0;function s(t){var a=t._db.transaction([t.defaultOptions._contentStoreName,t.defaultOptions._metadataStoreName],"readwrite");a.onerror=a.onabort=function(t){e.warning("Cache Manager cannot persist the information about usage of an entry. This may lead to earlier removal of the entry if browser storage space is over. Details: "+a.error)};try{a.objectStore(t.defaultOptions._metadataStoreName).put(t._metadata,t.defaultOptions._metadataKey)}catch(t){e.warning("Cache Manager cannot persist the information about usage of an entry. This may lead to earlier removal of the entry if browser storage space is over. Details: "+t.message)}}function i(t,a){return new Promise(function(n,r){var o,s;o=t._db.transaction([t.defaultOptions._contentStoreName,t.defaultOptions._metadataStoreName],"readwrite");s=C(t._metadata);function i(n){t._metadata=s;p(t);var o="Cache Manager LRUPersistentCache: cannot delete item with key: "+a+". Details: "+O(n);e.error(o);r(o)}o.onerror=i;o.onabort=i;o.oncomplete=function(){if(b(t)===0){t._lru=-1;t._mru=-1;t._metadata=y(t._ui5version)}e.debug("Cache Manager LRUPersistentCache: item with key "+a+" deleted");n()};e.debug("Cache Manager LRUPersistentCache: deleting item ["+a+"]");var c=o.objectStore(t.defaultOptions._contentStoreName).delete(a);c.onsuccess=function(){e.debug("Cache Manager LRUPersistentCache: request for deleting item ["+a+"] is successful, updating metadata...");P(t,a);o.objectStore(t.defaultOptions._metadataStoreName).put(t._metadata,t.defaultOptions._metadataKey)}})}function c(a,r){if(a.getCounter===undefined){a.getCounter=0}a.getCounter++;var o="[sync ] fnGet"+a.getCounter+": total[sync]  key ["+r+"]",i="[sync ] fnGet"+a.getCounter+": txStart[sync]  key ["+r+"]",c="[sync ] fnGet"+a.getCounter+": storeOpen[sync]  key ["+r+"]",u="[sync ] fnGet"+a.getCounter+": access result[sync]  key ["+r+"]",d="[sync ] fnGet"+a.getCounter+": putMetadata[sync]  key ["+r+"]",f="[sync ] fnGet"+a.getCounter+": deserialize[sync]  key ["+r+"]",l="[sync ]  _instance.get",_="[sync ]  getRequest.onSuccess";e.debug("Cache Manager LRUPersistentCache: get for key ["+r+"]...");t.start(l,"CM",n);var h=new Promise(function l(h,y){var C,p,b,M;t.start(o,"CM",n);t.start(i,"CM",n);p=a._db.transaction([a.defaultOptions._contentStoreName,a.defaultOptions._metadataStoreName],"readwrite");t.end(i);p.onerror=function(t){var a="Cache Manager cannot complete delete transaction for entry with key: "+r+". Details: "+p.error;e.error(a);y(a)};try{t.start(c,"CM",n);b=p.objectStore(a.defaultOptions._contentStoreName).get(r);t.end(c);b.onsuccess=function(o){t.start(_,"CM",n);t.start(u,"CM",n);M=new g(b.result,f,n);t.end(u);R("Cache Manager LRUPersistentCache: accessing the result",r,u);if(M.oData){t.start(d,"CM",n);if(M.oData.lu!==a._mru){M.oData.lu=++a._mru;m(a,M);s(a)}t.end(d);C=M.deserialize().oData.value}t.end(_);e.debug("Cache Manager LRUPersistentCache: get for key ["+r+"]...done");h(C)};b.onerror=function(t){e.error("Cache Manager cannot get entry with key: "+r+". Details: "+t.message);y(t.message)}}catch(t){e.error("Cache Manager cannot get entry with key: "+r+". Details: "+t.message);y(t.message);return}t.end(o)});t.end(l);return h}function u(t){var a=M(t);if(a==undefined){var n="Cache Manager LRUPersistentCache: deleteItemAndUpdateMetadata cannot find item to delete";e.debug(n);return Promise.reject(n)}return f(t,a).then(function(){return Promise.resolve().then(function(){P(t,a);return d(t).then(function(){return a},function(){e.warning("Cache Manager LRUPersistentCache: Free space algorithm deleted item "+"but the metadata changes could not be persisted. This won't break the functionality.");return a})})})}function d(t){return new Promise(function(a,n){try{var r=t._db.transaction([t.defaultOptions._contentStoreName,t.defaultOptions._metadataStoreName],"readwrite");r.onerror=o;r.onabort=o;r.oncomplete=function(){e.debug("Cache Manager LRUPersistentCache: persistMetadata - metadata was successfully updated");a()};r.objectStore(t.defaultOptions._metadataStoreName).put(t._metadata,t.defaultOptions._metadataKey)}catch(e){o(null,e)}function o(t,a){var r="Cache Manager LRUPersistentCache: persistMetadata error - metadata was not successfully persisted. Details: "+O(t)+". Exception: "+(a?a.message:"");e.debug(r);n(r)}})}function f(t,a){return new Promise(function(n,r){var o=t._db.transaction([t.defaultOptions._contentStoreName,t.defaultOptions._metadataStoreName],"readwrite");function s(t){var n="Cache Manager LRUPersistentCache: internalDel cannot complete delete transaction for entry with key: "+a+". Details: "+O(t);e.warning(n);r(t)}o.onerror=s;o.onabort=s;o.oncomplete=function(){if(b(t)===0){t._lru=0;t._mru=0;t._metadata=y(t._ui5version)}e.debug("Cache Manager LRUPersistentCache: internalDel deleting item ["+a+"]...done");n()};e.debug("Cache Manager LRUPersistentCache: internalDel deleting item ["+a+"]...");o.objectStore(t.defaultOptions._contentStoreName).delete(a)})}function l(t,a,n){return new Promise(function(o,s){var i,c,u,d="[sync ] internalSet: serialize[sync]  key ["+a+"]";u=C(t._metadata);var f=new g(a,n,typeof n,++t._mru,d,r).serialize();e.debug("Cache Manager: LRUPersistentCache: internal set with parameters: key ["+f.oData.key+"], access index ["+f.oData.lu+"]");c=t._db.transaction([t.defaultOptions._contentStoreName,t.defaultOptions._metadataStoreName],"readwrite");c.onerror=l;c.onabort=l;function l(a){e.debug("Cache Manager: LRUPersistentCache: internal set failed. Details: "+O(a));t._metadata=u;p(t);s(a)}c.oncomplete=function(){e.debug("Cache Manager: LRUPersistentCache: Internal set transaction completed. ItemCount: "+b(t));o()};i=c.objectStore(t.defaultOptions._contentStoreName).put(f.oData,f.oData.key);i.onsuccess=function(){m(t,f);c.objectStore(t.defaultOptions._metadataStoreName).put(t._metadata,t.defaultOptions._metadataKey)}})}function m(t,a){if(t._metadata.__byKey__[a.oData.key]!=null){var n=t._metadata.__byKey__[a.oData.key];delete t._metadata.__byIndex__[n];e.debug("Cache Manager LRUPersistentCache: set/internalset - item already exists, so its indexes are updated")}t._metadata.__byIndex__[a.oData.lu]=a.oData.key;t._metadata.__byKey__[a.oData.key]=a.oData.lu;D(t)}function _(t){t._ui5version=sap.ui.version;return new Promise(function a(n,r){var o;e.debug("Cache Manager "+"_initIndexedDB started");function s(){try{o=window.indexedDB.open(t.defaultOptions.databaseName,1)}catch(t){e.error("Could not open Cache Manager database. Details: "+t.message);r(t.message)}}s();o.onerror=function(t){e.error("Could not initialize Cache Manager database. Details: "+t.message);r(t.error)};o.onsuccess=function(a){var s=N("init_onsuccess");t._db=o.result;t._db.onversionchange=function(e){if(!e.newVersion){e.target.close()}};t._loadMetaStructure().then(function(){e.debug("Cache Manager "+" metadataLoaded. Serialization support: "+k()+", resolving initIndexDb promise");n(t)},r);s.endSync()};o.onupgradeneeded=function(a){var n=a.target.result;n.onerror=function(t){e.error("Cache Manager error. Details: "+t.message);r(n.error)};try{var o=n.createObjectStore(t.defaultOptions._contentStoreName);n.createObjectStore(t.defaultOptions._metadataStoreName)}catch(t){e.error("Could not initialize Cache Manager object store. Details: "+t.message);throw t}o.createIndex("ui5version","ui5version",{unique:false})}})}function h(e,t,a,n){this.key=e;this.sOrigType=a;this.value=t;this.lu=n}function g(e,t,a,n,r,o){if(arguments.length===3){this.oData=e;this.sMeasureId=t;this.sMsrCat=a}else{this.oData=new h(e,t,a,n)}}g.prototype.deserialize=function(){if(k()&&this.oData.sOrigType==="object"){t.start(this.sMeasureId,this.sMeasureId,this.sMsrCat);this.oData.value=JSON.parse(this.oData.value);t.end(this.sMeasureId);R("Cache Manager LRUPersistentCache: de-serialization the result",this.oData.key,this.sMeasureId)}return this};g.prototype.serialize=function(){if(k()&&this.oData.sOrigType==="object"){t.start(this.sMeasureId,this.sMeasureId,this.sMsrCat);this.oData.value=JSON.stringify(this.oData.value);t.end(this.sMeasureId);R("Cache Manager LRUPersistentCache: serialization of the value",this.oData.key,this.sMeasureId)}return this};function y(e){return{__byKey__:{},__byIndex__:{},__ui5version:e}}function C(e){var t=y(e.__ui5version);for(var a in e.__byIndex__){t.__byIndex__[a]=e.__byIndex__[a]}for(var n in e.__byKey__){t.__byKey__[n]=e.__byKey__[n]}return t}function p(t){var a=v(t._metadata.__byIndex__);t._mru=a.mru;t._lru=a.lru;e.debug("Cache Manager LRUPersistentCache: LRU counters are assigned to the CM: "+JSON.stringify(a))}function b(e){return Object.keys(e._metadata.__byKey__).length}function M(e){var t=e._metadata.__byIndex__[e._lru];if(t==undefined&&!D(e)){return null}else{return e._metadata.__byIndex__[e._lru]}}function v(e){var t=-1,a=-1,n=Number.MAX_VALUE,r=Object.keys(e),o=r.length;if(o===0){return{mru:-1,lru:-1}}else{while(++t<o){var s=parseInt(r[t]);if(a<s){a=s}if(n>s){n=s}}return{mru:a,lru:n}}}function S(t,a,n){return new Promise(function(r,o){var s=0;i(t,a,n);function i(t,a,n){s++;e.debug("Cache Manager LRUPersistentCache: cleanAndStore: freeing space attempt ["+s+"]");u(t).then(function(s){e.debug("Cache Manager LRUPersistentCache: cleanAndStore: deleted item with key ["+s+"]. Going to put "+a);return l(t,a,n).then(r,function(r){if(w(r)){e.debug("Cache Manager LRUPersistentCache: cleanAndStore: QuotaExceedError during freeing up space...");if(b(t)>0){i(t,a,n)}else{o("Cache Manager LRUPersistentCache: cleanAndStore: even when the cache is empty, the new item with key ["+a+"] cannot be added")}}else{o("Cache Manager LRUPersistentCache: cleanAndStore: cannot free space: "+O(r))}})},o)}})}function w(e){return e&&e.target&&e.target.error&&e.target.error.name==="QuotaExceededError"}function P(e,t){var a=e._metadata.__byKey__[t];delete e._metadata.__byKey__[t];delete e._metadata.__byIndex__[a];D(e)}function D(e){while(e._lru<=e._mru&&e._metadata.__byIndex__[e._lru]==undefined){e._lru++}return e._lru<=e._mru}function O(e){if(!e){return""}var t=e.message;if(e.target&&e.target.error&&e.target.error.name){t+=" Error name: "+e.target.error.name}return t}function k(){return sap.ui.getCore().getConfiguration().isUI5CacheSerializationSupportOn()}function L(){return sap.ui.getCore().getConfiguration().getUI5CacheExcludedKeys()}function U(e){return L().some(function(t){return e.indexOf(t)>-1})}function N(e,a){o++;var n="[async]  "+e+"["+a+"]- #"+o,r="[sync ]  "+e+"["+a+"]- #"+o;t.start(n,"CM",["LRUPersistentCache",e]);t.start(r,"CM",["LRUPersistentCache",e]);return{sMeasureAsync:n,sMeasureSync:r,endAsync:function(){t.end(this.sMeasureAsync)},endSync:function(){t.end(this.sMeasureSync)}}}function R(a,n,r){if(e.getLevel()>=e.Level.DEBUG){e.debug(a+" for key ["+n+"] took: "+t.getMeasurement(r).duration)}}return a});