/* ============================= */
/* CSS for control sap.m/Select  */
/* Horizon theme                 */
/* ============================= */

/* IconOnly */

.sapMSlt.sapMSltIconOnly:not(.sapMSltDisabled) {
	border-color: @sapUiButtonLiteBorderColor;
	background: @sapUiButtonLiteBackground;
	border-radius: 0.2rem;
}

/* IconOnly Hover */

.sapMSltIconOnly.sapMSltHoverable:hover:not(.sapMSltState) {
	background: @sapUiButtonLiteHoverBackground;

	&.sapMSltWithIcon {
		border: 0.0625rem solid @sapUiButtonLiteHoverBorderColor;
	}
}

// Prevent jumping of icon only select when hover
.sapMSltIconOnly.sapMSltHoverable:not(.sapMSltState) {
	border: 0.0625rem solid transparent;
}

/*IconOnly Pressed */
.sapMSltPressed.sapMSltIconOnly:not(.sapMSltDisabled) {
	background: @sapUiToggleButtonPressedBackground;
	border: 0.0625rem solid @sapUiToggleButtonPressedBorderColor;
}

.sapMSlt:not(.sapMSltIconOnly) {
	border-radius: 0.25rem;
}

.sapMSlt {
	height: 2.25rem;
}

.sapMSlt > .sapMSltLabel {
	line-height: 2.125rem;
}

.sapMSltArrow {
	line-height: 2rem;
}

.sapMSltPressed > .sapMSltArrow::before {
	color: @sapUiButtonActiveTextColor;
}

.sapMSlt.sapMSltPressed,
.sapMSltPressed > .sapMSltArrow {
	background: @sapUiButtonLiteHoverBackground;
}

html.sap-desktop .sapMSlt.sapMSltFocused:not(.sapMSltExpanded):not(.sapMSltDisabled):not(.sapMSltState):before {
	outline-offset: -2px;
}

html.sap-desktop .sapMSlt.sapMSltFocused:not(.sapMSltExpanded):not(.sapMSltDisabled).sapMSltState:before {
	outline-offset: -2px;
}


html.sap-desktop .sapMSltIconOnly.focus:not(.sapMSltExpanded):not(.sapMSltDisabled).sapMSltPressed {
	outline-color: @sapUiContentContrastFocusColor;
}

.sapMSltHoverable:not(.sapMSltState):not(.sapMSltIconOnly):hover {
	background: @sapUiFieldHoverBackground;

	.sapMSltArrow {
		border-radius: 0.25rem;
	}
}

.sapMSltHoverable.sapMSltPressed:not(.sapMSltState):not(.sapMSltIconOnly):hover .sapMSltArrow {
	border-radius: 0.125rem;
}

/* pressed and hover */

.sapMSltIconOnly.sapMSltPressed.sapMSltHoverable:not(.sapMSltState):hover {
	background: @sapUiToggleButtonPressedHoverBackground;
	border-color: @sapUiFieldActiveBorderColor;
}

/* value state */

.sapMSltState {
	border-width: 2px;
}

/* disabled */

.sapMSltDisabled {
	opacity: 0.5;
}

div.sapMSltPicker .sapMSltPickerValueState {
	box-shadow: inset 0 -0.0625rem @_sap_m_Dialog_HeaderShadowColor;
}

.sapUiSizeCompact .sapMSlt > .sapMSltArrow {
	line-height: 1.375rem;
}

.sapMSlt {
    border: none;
    background-image: linear-gradient(0deg, @sapField_BorderColor 0, @sapField_BorderColor 100%);
    background-size: 100% @sapField_BorderWidth;
    background-repeat: repeat-x;
    background-position: bottom;
}

.sapMSltHoverable:not(.sapMSltState):not(.sapMSltIconOnly):hover {
    border:none;
    box-shadow: @sapContent_Interaction_Shadow;
	border: none;
    background-image: linear-gradient(0deg, @sapField_BorderColor 0, @sapField_BorderColor 100%);
    background-size: 100% @sapField_BorderWidth;
    background-repeat: repeat-x;
    background-position: bottom;
}

.sapMSltPressed:not(.sapMSltDisabled):not(.sapMSltState),
.sapMSlt.sapMSltFocused:not(.sapMSltDisabled):not(.sapMSltState) {
    border:none;
    box-shadow: inset 0px 0px 0px 2px @sapContent_FocusColor;
}

.sapMSltHoverable:not(.sapMSltState):not(.sapMSltIconOnly):active {
    border:none;
    box-shadow: inset 0px 0px 0px 2px @sapField_Active_BorderColor;
}

.sapMSltArrow {
    width: 2rem;
    height: 2rem;
    margin-top: 2px;
    margin-right: 2px;
}

.sapUiSizeCompact .sapMSltArrow {
    width: 2rem;
    margin-top: 2px;
    height: 1.375rem;
    margin-right: 2px;
}

.sapMSltPressed >.sapMSltArrow {
    background-color: @sapButton_Active_Background;
    color: @sapButton_Active_TextColor;
    box-shadow: @sapContent_Interaction_Shadow;
    overflow: none;
    border-radius: 0.125rem;
}


/* focus */
html.sap-desktop .sapMSlt.sapMSltFocused:not(.sapMSltExpanded):not(.sapMSltDisabled) {
    &:before {
        box-shadow: inset 0px 0px 0px 2px @sapField_Focus_BorderColor;
    }
}

// =====================================
// Input Information state
// =====================================
.sapMSltInformation {
    border: none;
    background-image: linear-gradient(0deg, @sapField_InformationColor 0, @sapField_InformationColor 100%);
    background-size: 100% @sapField_InformationBorderWidth;
    background-repeat: repeat-x;
    background-position: bottom;
}

.sapMSltInformation.sapMSltHoverable:not(.sapMSltIconOnly):not(.sapMSltDisabled):not(.sapMSltPressed):hover {
    background-color: @sapField_Hover_Background;

    &:not(.sapMSltFocused) {
        box-shadow: @sapContent_Informative_Shadow; // NEW Parameter
    }
}

.sapMSltHoverable.sapMSltInformation:not(.sapMSltIconOnly):active,
.sapMSltFocused.sapMSltInformation {
    box-shadow: inset 0px 0px 0px 2px @sapField_Active_BorderColor;
    background-color: @sapField_Focus_Background;
}

// =====================================
// Input Success state
// =====================================

.sapMSltSuccess {
    border: none;
    background-image: linear-gradient(0deg, @sapField_SuccessColor 0, @sapField_SuccessColor 100%);
    background-size: 100% @sapField_SuccessBorderWidth;
    background-repeat: repeat-x;
    background-position: bottom;
}

.sapMSltSuccess.sapMSltHoverable:not(.sapMSltIconOnly):not(.sapMSltDisabled):not(.sapMSltPressed):hover  {
    background-color: @sapField_Hover_Background;

    &:not(.sapMSltFocused) {
        box-shadow: @sapContent_Positive_Shadow; // New Parameter
    }
}

// Field Success Focus - Experimental
.sapMSltHoverable.sapMSltSuccess:not(.sapMSltIconOnly):active,
.sapMSltFocused.sapMSltSuccess {
    box-shadow: inset 0px 0px 0px 2px @sapField_SuccessColor;
    border-radius: @sapField_BorderCornerRadius;
    background-color: @sapField_Focus_Background;
}

// =====================================
// Input Warning state
// =====================================

.sapMSltWarning {
    border: none;
    background-image: linear-gradient(0deg, @sapField_WarningColor 0, @sapField_WarningColor 100%);
    background-size: 100% @sapField_WarningBorderWidth;
    background-repeat: repeat-x;
    background-position: bottom;
}

.sapMSltWarning.sapMSltHoverable:not(.sapMSltIconOnly):not(.sapMSltDisabled):not(.sapMSltPressed):hover {
    background-color: @sapField_Hover_Background;

    &:not(.sapMSltFocused) {
        box-shadow: @sapContent_Critical_Shadow; // NEW Parameter
    }
}

// Field Warning Focus - Experimental
.sapMSltHoverable.sapMSltWarning:not(.sapMSltIconOnly):active,
.sapMSltFocused.sapMSltWarning {
    box-shadow: inset 0px 0px 0px 2px @sapField_WarningColor; // Experimental
    background-color: @sapField_Focus_Background;
}


// =====================================
// Input Error state
// =====================================

.sapMSltError {
    border: none;
    background-image: linear-gradient(0deg, @sapField_InvalidColor 0, @sapField_InvalidColor 100%);
    background-size: 100% @sapField_InvalidBorderWidth;
    background-repeat: repeat-x;
    background-position: bottom;
}

.sapMSltError.sapMSltHoverable:not(.sapMSltIconOnly):not(.sapMSltDisabled):not(.sapMSltPressed):hover {
    background-color: @sapField_Hover_Background;

    &:not(.sapMSltFocused) {
        box-shadow: @sapContent_Negative_Shadow; // New Parameter
    }
}

// Field Error Focus - Experimental
.sapMSltHoverable.sapMSltError:not(.sapMSltIconOnly):active,
.sapMSltFocused.sapMSltError {
    box-shadow: inset 0px 0px 0px 2px @sapField_InvalidColor;
    background-color: @sapField_Focus_Background;
}